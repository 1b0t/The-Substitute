// Generated by CoffeeScript 1.10.0
(function() {
  var cache, mediaFetchRequest, self, utils;

  mediaFetchRequest = require('../common/mediaFetchRequest');

  utils = require('../utils/utils');

  cache = require('../utils/cache');

  self = module.exports = {
    get: function(req, res, next) {
      mediaFetchRequest.get(req, res, next, mediaFetchRequest.mediaType.Shows);
    },
    getMultiple: function(req, res, next) {
      var fetchImageDataForSeasonIDs, mediaType, seasonIDs, trakt_id;
      console.log("test");
      mediaType = "seasons";
      trakt_id = req.params.trakt_id;
      if (trakt_id != null) {
        fetchImageDataForSeasonIDs = function(ids, callback) {
          var fetchedDataForMedia, i, id, len, pendingRequests, result, results;
          pendingRequests = ids.length;
          result = [];
          fetchedDataForMedia = function(json) {
            pendingRequests -= 1;
            result.push(json);
            if (pendingRequests === 0) {
              cache.save(req.params[mediaType], JSON.stringify(result));
              return callback(result);
            }
          };
          results = [];
          for (i = 0, len = seasonIDs.length; i < len; i++) {
            id = seasonIDs[i];
            results.push(mediaFetchRequest.fetchImageDataForTraktID(trakt_id, mediaFetchRequest.mediaType.Shows, fetchedDataForMedia, id));
          }
          return results;
        };
        if (req.params[mediaType] != null) {
          seasonIDs = req.params[mediaType].split(',');
          if (seasonIDs.length > 0 && req.params[mediaType].length > 0) {
            cache.load("/show/" + trakt_id + "/seasons?seasons=" + req.params[mediaType], function(cachedData) {
              var json;
              if (cachedData != null) {
                json = JSON.parse(cachedData);
                if (json != null) {
                  res.send(json);
                  next();
                  return;
                }
              }
              return fetchImageDataForSeasonIDs(seasonIDs, function(json) {
                res.send({
                  success: true,
                  data: json
                });
                return next();
              });
            });
          } else {
            res.status(400);
            res.send({
              success: false,
              message: "comma seperated list of seaons_ids or slugs named 'movies' is required"
            });
            next();
          }
        } else {
          res.status(400);
          res.send({
            success: false
          });
          next();
        }
      } else {
        res.send({
          success: false,
          message: "required parameter :trakt_id missing"
        });
        next();
      }
    }
  };

}).call(this);
